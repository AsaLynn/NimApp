plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'org.jetbrains.dokka'
    id 'kotlin-android-extensions'
    id 'com.github.dcendents.android-maven'
    id 'com.jfrog.bintray'
}
version = "1.1.1"
android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 1
        versionName version
        consumerProguardFiles "consumer-rules.pro"

        ndk {
            abiFilters "arm64-v8a", "armeabi-v7a", "x86", "x86_64"
        }
        renderscriptSupportModeEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions{
        doNotStrip '*/mips/*.so'
        doNotStrip '*/mips64/*.so'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: '*.jar')
    implementation("androidx.legacy:legacy-support-v4:1.0.0")
    api 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.core:core-ktx:1.3.2'
    api 'androidx.appcompat:appcompat:1.2.0'
    api 'com.google.android.material:material:1.2.1'
    api "me.leolin:ShortcutBadger:1.1.22@aar"
    api 'com.alibaba:fastjson:1.2.74'
    api 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    api 'com.github.chrisbanes:PhotoView:2.3.0'
    api 'com.hjq:xxpermissions:9.0'
    api 'com.zxn.titleview:TitleView:1.0.9'
    api 'com.zxn.utils:common-utils:1.4.7'
    api 'com.zxn.widget:expand-widget:1.1.9'
    api 'com.zxn.popup:easy-popup:1.0.7'
    api 'com.zxn.fuzzysearch:fuzzysearch:1.0.4'
//    api 'com.zxn.mvvm:jetpackmvvm:1.0.0'
    // 通过云信来集成小米等厂商推送需要
    api 'com.netease.nimlib:push:8.0.0'
    // 基础功能 (必需),nimsdk
    api 'com.netease.nimlib:basesdk:8.0.0'
    // 聊天室需要
    api 'com.netease.nimlib:chatroom:8.0.0'
//    // 通过云信来集成小米等厂商推送需要
//    api 'com.netease.nimlib:push:8.0.0'
    // 超大群需要
    api 'com.netease.nimlib:superteam:8.0.0'
    // 全文检索插件
    api 'com.netease.nimlib:lucene:8.0.0'

}

def siteUrl = 'https://github.com/zhang721688/NimApp'
def gitUrl = 'https://github.com/zhang721688/NimApp.git'
def libName = "netease-nimsdk"
group = "com.zxn.netease.nimsdk"
install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'aar'
                name 'desc content'
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'zxn'
                        name 'ZhangXiaoNing'
                        email 'zxn13716071676@sina.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task generateSourcesJar(type: Jar) {
    group = 'jar'
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    //outputFormat = 'javadoc'
    outputFormat = 'html'
    outputDirectory = javadoc.destinationDir
}

task generateJavadoc(type: Jar, dependsOn: dokkaJavadoc) {
    group = 'jar'
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives generateJavadoc
    archives generateSourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "NimApp"
        name = libName
        desc = 'desc content'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}
repositories {
    mavenCentral()
}
